{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "tabs",
  "type": "registry:component",
  "files": [
    {
      "path": "registry/tabs/tabs.tsx",
      "content": "'use client';\n\nimport { Slot } from '@radix-ui/react-slot';\nimport * as tabs from '@zag-js/tabs';\nimport { normalizeProps, useMachine, type PropTypes } from '@zag-js/react';\nimport {\n  createContext,\n  use,\n  useId,\n  type ComponentProps,\n  type ReactNode,\n} from 'react';\nimport { cn } from '~/lib/utils';\n\ntype AsChild = {\n  asChild?: boolean;\n};\n\nconst TabsContext = createContext<tabs.Api<PropTypes> | null>(null);\n\nfunction useTabsApi() {\n  const ctx = use(TabsContext);\n  if (!ctx) throw new Error('Must be inside a <TabsProvider>');\n  return ctx;\n}\n\nexport type TabsProps = {\n  children?: ReactNode;\n  id?: string;\n} & Omit<tabs.Props, 'id'>;\n\nexport function TabsProvider({ children, id: idProp, ...props }: TabsProps) {\n  const id = useId();\n  const service = useMachine(tabs.machine, {\n    id: idProp ?? id,\n    ...props,\n  });\n  const api = tabs.connect(service, normalizeProps);\n  return <TabsContext value={api}>{children}</TabsContext>;\n}\n\nexport function TabsRoot({\n  asChild,\n  className,\n  ...props\n}: ComponentProps<'div'> & AsChild) {\n  const api = useTabsApi();\n  const Comp = asChild ? Slot : 'div';\n  return (\n    <Comp\n      className={cn('', className)}\n      data-slot=\"tabs-root\"\n      {...api.getRootProps()}\n      {...props}\n    />\n  );\n}\n\nexport function TabsList({\n  asChild,\n  className,\n  ...props\n}: ComponentProps<'div'> & AsChild) {\n  const api = useTabsApi();\n  const Comp = asChild ? Slot : 'div';\n  return (\n    <Comp\n      className={cn(\n        'bg-secondary/25 flex w-fit gap-2 rounded-md border p-1',\n        className,\n      )}\n      data-slot=\"tabs-list\"\n      {...api.getListProps()}\n      {...props}\n    />\n  );\n}\n\nexport function TabsTrigger({\n  asChild,\n  value,\n  disabled,\n  className,\n  ...props\n}: ComponentProps<'button'> & AsChild & tabs.TriggerProps) {\n  const api = useTabsApi();\n  const Comp = asChild ? Slot : 'button';\n  return (\n    <Comp\n      className={cn(\n        'rounded-md border border-transparent px-3 py-1.5 text-xs font-bold transition',\n        'hover:border-border hover:bg-accent/50',\n        'aria-selected:bg-accent aria-selected:text-accent-foreground aria-selected:border-border',\n        className,\n      )}\n      data-slot=\"tabs-trigger\"\n      {...api.getTriggerProps({ value, disabled })}\n      {...props}\n    />\n  );\n}\n\nexport function TabsContent({\n  asChild,\n  value,\n  className,\n  ...props\n}: ComponentProps<'div'> & AsChild & tabs.ContentProps) {\n  const api = useTabsApi();\n  const Comp = asChild ? Slot : 'div';\n  return (\n    <Comp\n      className={cn('mt-4', className)}\n      data-slot=\"tabs-content\"\n      {...api.getContentProps({ value })}\n      {...props}\n    />\n  );\n}\n\nexport function TabsIndicator({ ...props }: ComponentProps<'div'> & AsChild) {\n  const api = useTabsApi();\n  return (\n    <div data-slot=\"tabs-indicator\" {...api.getIndicatorProps()} {...props} />\n  );\n}\n",
      "type": "registry:ui"
    }
  ]
}
